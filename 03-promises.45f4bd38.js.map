{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,UAAWL,SAASC,cAAc,0BA4BpC,SAASK,EAAcC,EAAUL,GAC/B,IAAMM,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,WAAaC,YAAW,WAClBP,EACFI,EAAQ,CAAEL,WAAUL,UACfW,EAAS,CAAEN,WAAUL,S,GAC3BA,E,IAhCPJ,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,SAAStB,EAAKI,MAAMmB,OAC1BjB,EAASgB,SAAStB,EAAKM,OAAOiB,OAChClB,EAAOiB,SAAStB,EAAKK,KAAKkB,OAErBC,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChChB,EAAcgB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MACjBuB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUL,EAAKsB,EAALtB,MAClBuB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,M,IAGjDiB,GAAShB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = parseInt(refs.delay.value);\n  const amount = parseInt(refs.amount.value);\n  let step = parseInt(refs.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, rejected) => {\n    intervalId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else rejected({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","rejected","intervalId","setTimeout","addEventListener","e","preventDefault","delay1","parseInt","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.45f4bd38.js.map"}